{"version":3,"sources":["mystyle.module.css","components/headerComponent.js","components/recipeContentComponent.js","components/recipeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","styled","div","Header","AppNameComponent","AppIcon","img","SearchComponent","InputSearch","input","PlaceHolder","PopupHead","PopupContent","IngredientParent","IngredientText","p","IngredientTextLabel","IngredientCard","CloseButton","button","SeeMoreButton","PopupEnd","PopupHeadline","RecipeListContainer","RecipeContainer","CoverImage","RecipeName","span","IngredientsText","SeeMoreText","RecipeComponent","props","recipeObj","useState","show","setSHow","Dialog","open","style","background","onClick","icon","faTimes","width","alignSelf","cursor","recipe","ingredients","map","ingredientsObj","text","weight","window","url","src","image","label","App","timeoutId","updateTimeoutId","recipeList","updateRecipeList","fetchRecipe","searchString","a","Axios","get","responce","data","hits","faSearch","placeholder","onChange","event","clearTimeout","timeout","setTimeout","target","value","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c068c4d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MuiPaper-root\":\"mystyle_MuiPaper-root__2SyH1\"};","import styled from 'styled-components'\r\n\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`\r\n\r\nexport const Header = styled.div`\r\ncolor: white;\r\nbackground:black;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nflex-directon: row;\r\npadding: 20px 10px;\r\ngap: 10px;\r\nfont-size: 25px;\r\nfont-weight: bold;\r\nbox-shadow: 0 3px 6px 0 #555;\r\n`\r\n\r\nexport const AppNameComponent = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n`;\r\nexport const AppIcon = styled.img`\r\nwidth: 30px;\r\nheight:30px;\r\nmargin:15px;\r\n`\r\nexport const SearchComponent = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nbackground: white;\r\npadding:10px;\r\nborder-radius: 6px;\r\ncolor: black;\r\n`;\r\n\r\nexport const InputSearch = styled.input`\r\nborder: 1px solid transparent;\r\nborder-radius: 6px;\r\nmargin-left:5px;\r\noutline:none;\r\n`","import styled from 'styled-components';\r\n\r\nexport const PlaceHolder= styled.img`\r\nwidth: 200px;\r\nheight:200px;\r\nopacity: 0.5;\r\n`\r\nexport const PopupHead = styled.div`\r\nbackground: green;\r\nwidth: auto;\r\nheight: 40px;\r\ntext-align:center;\r\nfont-size:18px;\r\nfont-weight:bold;\r\ncolor: white;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`\r\n\r\nexport const PopupContent = styled.div`\r\nwidth:auto;\r\nheight:auto;\r\nbackground: white;\r\n`\r\n\r\n\r\n\r\nexport const IngredientParent = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: center;\r\npadding: 0 20px;\r\n`\r\n\r\nexport const IngredientText = styled.p`\r\nwidth: 300px;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items:center;\r\n`\r\n\r\nexport const IngredientTextLabel = styled(IngredientText)`\r\njustify-content: flex-start;\r\n`\r\nexport const IngredientCard = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nbox-shadow: 0 6px 16px 0 #555;\r\npadding: 0 50px;\r\nborder-radius: 10px;\r\nmargin:10px;\r\njustify-content: center;\r\nalign-content: center;\r\nmargin-bottom: 20px;\r\n`\r\n\r\nexport const CloseButton = styled.button`\r\nwidth: 200px;\r\npadding: 5px;\r\nborder: none;\r\nbackground: green;\r\ncolor:white;\r\nborder-radius: 3px;\r\noutline: none;\r\ncursor: pointer;\r\n`\r\n\r\nexport const SeeMoreButton = styled(CloseButton)`\r\nbackground: #ff4d4d;\r\n`\r\nexport const PopupEnd = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-evenly;\r\npadding-bottom: 20px;\r\n`\r\n\r\nexport const PopupHeadline = styled.p`\r\ntext-align: center;\r\nmargin: 0 auto;\r\nwidth: 100%;\r\n`","import styled from 'styled-components';\r\nimport React, { Component } from 'react';\r\n\r\nexport const RecipeListContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 20px;\r\nflex-wrap: wrap;\r\njustify-content: space-evenly;\r\n`\r\n\r\nexport const RecipeContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding:10px;\r\nmargin: 10px;\r\nbox-shadow: 0 2px 15px 0 #555;\r\nborder-radius: 10px;\r\n\r\n`\r\n\r\nexport const CoverImage = styled.img`\r\nheight: 200px;\r\nalign-self: center;\r\nobject-fit:cover;\r\n`\r\n\r\nexport const RecipeName = styled.span`\r\nfont-size: 18px;\r\nfont-weight: bold;\r\ncolor: black;\r\nmargin:10px 0;\r\ntext-align: center;\r\n`\r\nexport const IngredientsText = styled.span`\r\nfont-size: 18px;\r\nfont-weight: bold;\r\nborder: 1px solid green;\r\ncolor: green;\r\nmargin-bottom:12px;\r\ntext-align:center;\r\ncurson: pointer;\r\npadding: 5px 0;\r\nborder-radius: 10px;\r\ncursor: pointer;\r\n`\r\nexport const SeeMoreText = styled(IngredientsText)`\r\ncolor: red;\r\nborder: 1px solid red;\r\n`\r\n\r\n\r\n\r\n","import styled from 'styled-components'\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {Container,Header,AppNameComponent,AppIcon,SearchComponent,InputSearch} from './components/headerComponent'\nimport {PopupHead,PopupHeadline,PopupContent,IngredientCard,IngredientParent,IngredientTextLabel,IngredientText,PopupEnd,CloseButton,SeeMoreButton,PlaceHolder} from './components/recipeContentComponent'\nimport {RecipeListContainer,RecipeContainer,CoverImage,RecipeName,IngredientsText,SeeMoreText} from './components/recipeComponent'\nimport { useState } from 'react';\nimport Axios from 'axios';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport styles from './mystyle.module.css'; \n\n\nconst APPID = \"88be474d\";\nconst APPKEY = \"5afd433deb9efae7f5bf3e1e7490235b\";\n\n\n\n\nconst RecipeComponent = (props) => {\n  // console.log(\"props\", props);\n  const { recipeObj } = props;\n\n  const [show, setSHow] = useState(false);\n  return (\n    <>\n    <Dialog open={show} style={{background: \"none\"}}>\n    <PopupHead>\n      <PopupHeadline>Ingredients</PopupHeadline>\n      <FontAwesomeIcon onClick={() => setSHow(\"\")} icon={faTimes} style={{width: \"15px\", alignSelf: \"flex-start\", cursor: \"pointer\"}}/>\n      </PopupHead>\n      <PopupContent>\n      {recipeObj.recipe.ingredients.map((ingredientsObj)=> (\n        <IngredientCard>\n            <IngredientParent>\n            <IngredientTextLabel>{ingredientsObj.text}</IngredientTextLabel>\n            <IngredientText>{ingredientsObj.weight}</IngredientText>\n          </IngredientParent>\n        </IngredientCard>\n      ))}\n      </PopupContent>\n      <PopupEnd>\n        <CloseButton onClick= {() => setSHow(\"\")}>Close</CloseButton>\n        <SeeMoreButton onClick = {() => window.open(recipeObj.recipe.url)}>See more</SeeMoreButton>\n      </PopupEnd>\n    </Dialog>\n    <RecipeContainer>\n      {/* console.log(recipeObj.recipe.ingredients.text); */}\n    <CoverImage src={recipeObj.recipe.image}/>\n    <RecipeName>{recipeObj.recipe.label}</RecipeName>\n    <IngredientsText onClick={()=> setSHow(true)}>Ingredients</IngredientsText>\n    <SeeMoreText onClick={()=> window.open(recipeObj.recipe.url)}>See complete recipe</SeeMoreText>\n  </RecipeContainer>\n\n  </>\n  )\n};\n\nfunction App() {\n  const [timeoutId, updateTimeoutId] = useState();\n  const [recipeList, updateRecipeList] = useState([]);\n\n  const onTextChange = (event) => {\n    clearTimeout(timeoutId);\n    const timeout = setTimeout(() =>fetchRecipe(event.target.value), 500);\n    updateTimeoutId(timeout);\n   \n  }\n\n  const fetchRecipe = async(searchString) => {\n     const responce = await Axios.get(\n      `https://api.edamam.com/search?q=${searchString}&app_id=${APPID}&app_key=${APPKEY}`\n      );\n      // console.log(responce.data.hits);\n      updateRecipeList(responce.data.hits);\n  }\n\n  return (\n    <Container>\n      <Header>\n        <AppNameComponent>\n          <AppIcon src=\"./cheeseburger.png\"/>\n          WhatToCook</AppNameComponent>\n        <SearchComponent>\n        <FontAwesomeIcon icon={faSearch} style={{width: \"15px\"}}/>\n        <InputSearch placeholder=\"Search recipe\" onChange={onTextChange}/>\n        </SearchComponent>\n \n      </Header>\n      <RecipeListContainer>\n        {recipeList.length ? recipeList.map((recipeObj) => (\n          <RecipeComponent recipeObj={recipeObj}/>\n        )): <PlaceHolder src=\"./cheeseburger.png\"/>\n      }\n\n      </RecipeListContainer>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}